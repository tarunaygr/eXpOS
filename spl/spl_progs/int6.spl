alias currentPID R10;
alias process_table_entry R11;

currentPID=[SYSTEM_STATUS_TABLE+1];
process_table_entry=PROCESS_TABLE+currentPID*16;

[process_table_entry+9]=7; //Setting the mode flag

alias UserSP R0;
UserSP=SP;

[process_table_entry+13]=SP;//Store SP into UPTR

SP=[process_table_entry+11]*512-1;// Moving to Kernel Stack

alias PhysicalPageNo R1;
alias offset R2;
alias FileDescAddr R3;
PhysicalPageNo=[PTBR+2*((UserSP-4)/512)];//Find the physical page number of the required logical page from Page table
offset=(UserSP-4)%512;
FileDescAddr=(PhysicalPageNo*512)+offset;//Physical address where the file decriptor is stored
alias filedesc R4;
filedesc=[FileDescAddr];
alias  physicalAddRetVal R5;

physicalAddRetVal =([PTBR+2*(UserSP-1)/512]*512)+((UserSP-1)%512);

if( filedesc!=-1 ) then
    [physicalAddRetVal]=-1;
else
    //print "int6";
    alias word R6;
    word=[([PTBR+2*((UserSP-3)/512)]*512)+(UserSP-3)%512];
    multipush(R0,R1,R2,R3,R4,R5,R6,R10,R11);
    R1=4;       //For Terminal Read
    R2=currentPID;
    R3=word;
    call MOD_4;
    multipop(R0,R1,R2,R3,R4,R5,R6,R10,R11);
    
    [physicalAddRetVal]=0;
endif;
[process_table_entry+9]=0;
//print [process_table_entry+8];
//print"Back in int6";
SP=UserSP;
ireturn;
