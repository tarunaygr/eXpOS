//print "int14";
alias UStack R9;
UStack=SP;

alias syscallno R1;

syscallno = [[PTBR + 2 * ((UStack - 5) / 512)] * 512 + ((UStack - 5) % 512)];
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13]=SP;
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]*512-1;
alias returnvalue R3;
returnvalue = ([PTBR + 2 * ((UStack - 1) / 512)] * 512) + ((UStack - 1) % 512);

//SemLock
if(syscallno==19)then
    //print "semlock";
    alias pprt R11;
    pprt=([PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]+1)*512 - 16;
    alias semid R10;
    semid=[([PTBR + 2 * ((UStack - 4) / 512)] * 512) + ((UStack - 4) % 512)];
    //print semid;
    [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=19;
    
    if(semid>7 || [pprt + 2*semid]!=1)then
        //print "ill semid lock";
        [returnvalue]=-1;
        call exit;
    endif;
    while([SEMAPHORE_TABLE +4*[pprt + 2*semid+1]]!=-1)do
        [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+4]=WAIT_SEMAPHORE;
        [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+5]=[pprt +2*semid+1];
        backup;
        call MOD_5;
        restore;
    endwhile;

    [SEMAPHORE_TABLE +4*[pprt + 2*semid+1]]=[SYSTEM_STATUS_TABLE+1];
    [returnvalue]=0;
    
    call exit;
endif;

//SemUnlock
if( syscallno==20 ) then
//print "sem Unlock";
    [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=20;
    alias semid R10;
    semid=[([PTBR + 2 * ((UStack - 4) / 512)] * 512) + ((UStack - 4) % 512)];
    alias index R12;
    alias pprt R11;
    pprt=([PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]+1)*512 - 16;
    if(semid>7 || [pprt + 2*semid]!=1)then
        //print "ill semid unlock";
        [returnvalue]=-1;
        call exit;
    endif;

    if([SEMAPHORE_TABLE + 4*[pprt + 2*semid+1]]!=-1)then
        if([SEMAPHORE_TABLE + 4*[pprt + 2*semid+1]]!=[SYSTEM_STATUS_TABLE+1])then
            [returnvalue]=-2;
            call exit;
        endif;
        [SEMAPHORE_TABLE + 4*[pprt + 2*semid+1]]=-1;
        alias i R13;
        i=0;
        while(i<16)do
            if([PROCESS_TABLE +16*i + 4]==WAIT_SEMAPHORE &&[PROCESS_TABLE +16*i + 5]==[pprt + 2*semid+1])then
                [PROCESS_TABLE +16*i + 4]=READY;
            endif;
            i=i+1;
        endwhile;
        [returnvalue]=0;
        call exit;
    endif;

endif ;


exit:
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13];
ireturn;