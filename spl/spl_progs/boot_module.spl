//print "BOOT MODULE";

//LIBRARY
loadi(63,13);
loadi(64,14);

//INIT PROGRAM
loadi(65,7);
loadi(66,8);

//INT 10
loadi(22,35);
loadi(23,36);

//EXCEPTION HANDLER
loadi(2,15);
loadi(3,16);

//TIMER INTERRUPT
loadi(4,17);
loadi(5,18);

//INT 7
loadi(16,29);
loadi(17,30);

//SCHEDULER
loadi(50,63);
loadi(51,64);

//MOD 0 (RESOURCE MANAGER)
loadi(40,53);
loadi(41,54);

//MOD 4 (DEVICE MANAGER)
loadi(48,61);
loadi(49,62);

//INT 6
loadi(14,27);
loadi(15,28);

//CONSOLE INTERRUPT
loadi(8,21);
loadi(9,22);

//INT 9
loadi(20,33);
loadi(21,34);

//MODULE 1
loadi(42,55);
loadi(43,56);

//MODULE 2
loadi(44,57);
loadi(45,58);

//INODE TABLE
loadi(59,3);
loadi(60,4);

//DISK INTERRUPT
loadi(6,19);
loadi(7,20);

//DISK FREE LIST
loadi(61,2);

//INT 8
loadi(18,31);
loadi(19,32);

//INT 11
loadi(24,37);
loadi(25,38);

//INT 15
loadi(32,45);
loadi(33,46);

//INT 13
loadi(28,41);
loadi(29,42);

//INT 14
loadi(30,43);
loadi(31,44);

//INT 4
loadi(10,23);
loadi(11,24);

//ROOT FILE
loadi(62,5);

//INT 5
loadi(12,25);
loadi(13,26);

//MODULE 3 (FILE MANAGER)
loadi(46,59);
loadi(47,60);


[TERMINAL_STATUS_TABLE]=0;//Terminal is free at the beginning
[PROCESS_TABLE+(16*2)+4]=TERMINATED;
[PROCESS_TABLE+(16*3)+4]=TERMINATED;
[PROCESS_TABLE+(16*4)+4]=TERMINATED;
[PROCESS_TABLE+(16*5)+4]=TERMINATED;
[PROCESS_TABLE+(16*6)+4]=TERMINATED;
[PROCESS_TABLE+(16*7)+4]=TERMINATED;
[PROCESS_TABLE+(16*8)+4]=TERMINATED;
[PROCESS_TABLE+(16*9)+4]=TERMINATED;
[PROCESS_TABLE+(16*10)+4]=TERMINATED;
[PROCESS_TABLE+(16*11)+4]=TERMINATED;
[PROCESS_TABLE+(16*12)+4]=TERMINATED;
[PROCESS_TABLE+(16*13)+4]=TERMINATED;
[PROCESS_TABLE+(16*14)+4]=TERMINATED;
[PROCESS_TABLE+(16*15)+4]=TERMINATED;

//INIT PROCESS
PTBR=PAGE_TABLE_BASE+(20*1);
PTLR=10;

//Library
[PTBR+0]=63;
[PROCESS_TABLE+(16*11)+4]=TERMINATED;
[PROCESS_TABLE+(16*12)+4]=TERMINATED;
[PROCESS_TABLE+(16*13)+4]=TERMINATED;
[PROCESS_TABLE+(16*14)+4]=TERMINATED;
[PROCESS_TABLE+(16*15)+4]=TERMINATED;

//INIT PROCESS
PTBR=PAGE_TABLE_BASE+(20*1);
PTLR=10;

//Library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//Heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//Code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

[76*512]=[65*512+1];


[PROCESS_TABLE+(16*1)+11]=80;//init UPAGE NUMBER
[PROCESS_TABLE+(16*1)+1]=1;//init PID
[PROCESS_TABLE+(16*1)+13]=8*512;//UPTR Value of init
[PROCESS_TABLE+(16*1)+12]=0;                //offset to the UPAGE NUMBER page
[PROCESS_TABLE+(16*1)+14]=PAGE_TABLE_BASE+(20*1);  //page table address of init
[PROCESS_TABLE+(16*1)+15]=10;               //PTLR value of init
[PROCESS_TABLE+(16*1)+4]=CREATED;     //Set state of init
[PROCESS_TABLE+(16*1)+3]= 1; //userid field
alias i R10;

i=0;
while( i<128 ) do
    if( i>82 ) then
        [MEMORY_FREE_LIST+i]=0;
        i=i+1;
    else
        [MEMORY_FREE_LIST+i]=1;
        i=i+1;
    endif ;
endwhile ;

[SYSTEM_STATUS_TABLE+2]=45;

[DISK_STATUS_TABLE]=0;

alias pprt R14;

pprt =(80+1)*512 - 16;

i=0;
while( i<16 ) do
    [pprt+i]=-1;
    i=i+1;
endwhile ;
R3=DISK_MAP_TABLE+(10*1);
[R3+2]=-1;
[R3+3]=-1;
[R3+4]=7;
[R3+5]=8;
[R3+6]=-1;
[R3+7]=-1;
[R3+8]=-1;
[R3+8]=-1;

i=0;
while(i<32)do   
    [SEMAPHORE_TABLE + 4*i]=-1;
    [SEMAPHORE_TABLE +4*i +1]=0;
    i=i+1;
endwhile;

i=0;
while( i<MAX_FILE_NUM ) do
    [FILE_STATUS_TABLE + (4*i)]=-1;
    [FILE_STATUS_TABLE + (4*i)+1]=-1;
    i=i+1;
endwhile ;
i=0;
while( i<4 ) do
    [BUFFER_TABLE+(4*i)]=-1;
    [BUFFER_TABLE+(4*i)+1]=0;
    [BUFFER_TABLE+(4*i)+2]=-1;
    i=i+1;
endwhile ;
i=0;
while( i<MAX_OPENFILE_NUM ) do
    [OPEN_FILE_TABLE+(4*i)]=-1;
    [OPEN_FILE_TABLE+(4*i)+1]=0;
    [OPEN_FILE_TABLE+(4*i)+2]=-1;
    i=i+1;
endwhile ;

return;
