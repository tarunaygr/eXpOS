//print "Exhandler";
breakpoint;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=-1;

[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13]=SP;
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]*512-1;

breakpoint;
backup;

multipush(EIP);




if( EC==0 ) then

    
    R8=PAGE_TABLE_BASE+(20*[SYSTEM_STATUS_TABLE+1]);
    if( EPN>3 &&EPN<8) then
        multipush(R0,R1,R2);
        R1=GET_CODE_PAGE;
        R2=[DISK_MAP_TABLE+(10*[SYSTEM_STATUS_TABLE+1])+EPN];
        call MOD_2;
        [PTBR+(EPN*2)]=R0;
        [PTBR+(EPN*2)+1]="1100";
        multipop(R0,R1,R2);
        breakpoint;
    else
        alias pg1 R4;
        alias pg2 R5;
        multipush(R0,R1,R2,R4,R3,R8);
        R1=GET_FREE_PAGE;
        call MOD_2;
        [PTBR+4]=R0;
        [PTBR+5]="1110";
        multipop(R0,R1,R2,R4,R3,R8);
        multipush(R0,R1,R2,R4,R3,R8);
        R1=GET_FREE_PAGE;
        call MOD_2;

        [PTBR+6]=R0;
        [PTBR+7]="1110";        
        multipop(R0,R1,R2,R4,R3,R8);

    endif ;
else
    
    if(EC==1)then
    print "Illegal Inst";
    endif;

    if(EC==2)then
        print "Ill Mem Acc";
    endif;

    if(EC==3)then
        print "Arith Error";  
    endif;

    R1=EXIT_PROCESS;
    R2=[SYSTEM_STATUS_TABLE+1];
    call MOD_1;
    call MOD_5;
endif ;
multipop(EIP);
restore;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;

SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13];

SP=SP+1;

alias stackaddr R9;

stackaddr= ([PTBR+ 2*(SP/512)] * 512) + (SP % 512);

[stackaddr]=EIP;
ireturn;
