//DEVICE MANAGER

//print "mod 4";
alias functionNo R1;
alias PID R2;

if( functionNo==TERMINAL_WRITE ) then
    multipush(R1,R2,R3);
    R1=8;
    R2=PID;
    
    call MOD_0;

    multipop(R1,R2,R3);
    print R3;

    multipush(R1,R2,R3);

    R1=9;
    R2=PID;

    call MOD_0;

    R10=R0;

    multipop(R1,R2,R3);

    return;
endif ;

if( functionNo==TERMINAL_READ) then
    multipush(R1,R2,R3);
    R1=8;
    R2=PID;
    
    call MOD_0;//acquire terminal

    multipop(R1,R2,R3);

    read;

    [PROCESS_TABLE+(PID*16)+4]=WAIT_TERMINAL;

    multipush(R1,R2,R3);

    call MOD_5;

    multipop(R1,R2,R3);

    alias physicalwordaddr R11;
    physicalwordaddr=([PTBR+2*((R3)/512)]*512)+((R3)%512);
    
    [physicalwordaddr]=[PROCESS_TABLE+(PID*16)+8]; //storing the value from input buffer to the variable
    return;
endif ;


if( functionNo==DISK_LOAD ) then
    multipush(R1,R2,R3,R4);
    R1=3;
    R2=PID;
    
    call MOD_0;//acquire disk
    multipop(R1,R2,R3,R4);

    [DISK_STATUS_TABLE+1]=0;//Set to load
    [DISK_STATUS_TABLE+2]=R3;//Store page to be loaded into
    [DISK_STATUS_TABLE+3]=R4;//Store block to be loaded from
    load(R3,R4);
    [PROCESS_TABLE + (16*[SYSTEM_STATUS_TABLE+1])+4]=WAIT_DISK;
    
    call MOD_5;
    
    return;

endif ;

if( functionNo==DISK_STORE ) then
   
    multipush(R0,R1,R2,R3,R4);
    R1=3;
    R2=PID;
    
    call MOD_0;//acquire disk
    multipop(R0,R1,R2,R3,R4);
    
    [DISK_STATUS_TABLE+1]=1;//Set to write
    [DISK_STATUS_TABLE+2]=R3;//Store page to be loaded from
    [DISK_STATUS_TABLE+3]=R4;//Store block to be loaded into  
    store(R3,R4);  
    [PROCESS_TABLE + (16*[SYSTEM_STATUS_TABLE+1])+4]=WAIT_DISK;
    
    call MOD_5;
    //print "stored";
    return;
endif ;

