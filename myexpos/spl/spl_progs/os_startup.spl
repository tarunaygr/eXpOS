//print "OS STARTUP";

//IDLE PROGRAM
loadi(69,11);
loadi(70,12);

// BOOT MODULE
loadi(54,67);
loadi(55,68);

SP=82*512-1;

call BOOT_MODULE;

//IDLE PROCESS
PTBR=PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR=10;

//Library
[PTBR+0]=-1;
[PTBR+1]="0000";
[PTBR+2]=-1;
[PTBR+3]="0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[81 * 512] = [69*512 + 1];    //load first instruction address into top of stack

[PROCESS_TABLE+11]=82;               //idle UPAGE NUMBER
[PROCESS_TABLE+1]=0;                 //idle PID
[PROCESS_TABLE+4]=RUNNING;           //idle STATUS
[PROCESS_TABLE+13]=8*512;            //idle UPTR (points to the user stack)
[PROCESS_TABLE+12]=0;                //KPTR offset to the UPAGE NUMBER page
[PROCESS_TABLE+14]=PAGE_TABLE_BASE;  //page table address of idle
[PROCESS_TABLE+15]=10;               //PTLR value of idle

SP=8*512;
[SYSTEM_STATUS_TABLE+1]=0;
ireturn;
